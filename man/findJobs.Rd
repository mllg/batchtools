% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findJobs.R
\name{findSubmitted}
\alias{findDone}
\alias{findErrors}
\alias{findExperiments}
\alias{findExpired}
\alias{findJobs}
\alias{findNotDone}
\alias{findNotStarted}
\alias{findNotSubmitted}
\alias{findOnSystem}
\alias{findQueued}
\alias{findRunning}
\alias{findStarted}
\alias{findSubmitted}
\title{Find and Filter Jobs}
\usage{
findSubmitted(ids = NULL, reg = getDefaultRegistry())

findNotSubmitted(ids = NULL, reg = getDefaultRegistry())

findStarted(ids = NULL, reg = getDefaultRegistry())

findNotStarted(ids = NULL, reg = getDefaultRegistry())

findDone(ids = NULL, reg = getDefaultRegistry())

findNotDone(ids = NULL, reg = getDefaultRegistry())

findErrors(ids = NULL, reg = getDefaultRegistry())

findOnSystem(ids = NULL, reg = getDefaultRegistry())

findRunning(ids = NULL, reg = getDefaultRegistry())

findQueued(ids = NULL, reg = getDefaultRegistry())

findExpired(ids = NULL, reg = getDefaultRegistry())

findJobs(expr, ids = NULL, reg = getDefaultRegistry())

findExperiments(prob.name = NULL, algo.name = NULL, prob.pars, algo.pars,
  repls = NULL, ids = NULL, reg = getDefaultRegistry())
}
\arguments{
\item{ids}{[\code{\link[base]{data.frame}} or \code{integer}]\cr
A \code{\link[base]{data.frame}} (or \code{\link[data.table]{data.table}})
with a column named \dQuote{job.id}.
Alternatively, you may also pass a vector of integerish job ids.
If not set, defaults to all jobs.}

\item{reg}{[\code{\link{Registry}}]\cr
Registry. If not explicitly passed, uses the last created registry.}

\item{expr}{[\code{expression}]\cr
Predicate expression evaluated in the job parameters.}

\item{prob.name}{[\code{character}]\cr
Whitelist of problem names. If not provided, all problems are matched.}

\item{algo.name}{[\code{character}]\cr
Whitelist of algorithm names. If not provided, all algorithms are matched.}

\item{prob.pars}{[\code{expression}]\cr
Predicate expression evaluated in the problem parameters.}

\item{algo.pars}{[\code{expression}]\cr
Predicate expression evaluated in the algorithm parameters.}

\item{repls}{[\code{integer}]\cr
Whitelist of replication numbers. If not provided, all replications are matched.}
}
\value{
[\code{\link{data.table}}]. Matching job ids are stored in the column \dQuote{job.id}.
  See \code{\link{JoinTables}} for examples on working with job tables.
}
\description{
Use \code{findJobs} to query jobs for which a predicate expression, evaluated on the parameters, yields \code{TRUE}.
The other functions can be used to query the computational status.
Note that they do not synchronize the registry, thus you are advised to run \code{\link{syncRegistry}} yourself
or, if you are really just interested in the status, use \code{\link{getStatus}}.
Note that \code{findOnSystem} and \code{findExpired} are somewhat heuristic and may report misleading results, depending on the state of the system.
}
\examples{
reg = makeRegistry(file.dir = NA, make.default = FALSE)
batchMap(identity, i = 1:3, reg = reg)
ids = findNotSubmitted(reg = reg)

# get all jobs:
findJobs(reg = reg)

# filter for jobs with parameter i >= 2
findJobs(i >= 2, reg = reg)

# filter on the computational status
findSubmitted(reg = reg)
findNotDone(reg = reg)
}

