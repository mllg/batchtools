% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ExperimentRegistry.R
\name{ExperimentRegistry}
\alias{ExperimentRegistry}
\alias{makeExperimentRegistry}
\alias{makeTempExperimentRegistry}
\title{ExperimentRegistry Constructor}
\usage{
makeExperimentRegistry(...)

makeTempExperimentRegistry(make.default = FALSE,
  temp.dir = getOption("batchtools.temp.dir", tempdir()), ...)
}
\arguments{
\item{...}{[\code{ANY}]\cr
Arguments passed to \code{\link{Registry}}.}

\item{make.default}{[\code{logical(1)}]\cr
If set to \code{TRUE}, the created registry is saved inside the package
namespace and acts as default registry. You might want to switch this
off if you work with multiple registries simultaneously.
Default is \code{TRUE}.}

\item{temp.dir}{[\code{character(1)}]\cr
Path to temporary directory.
Defaults to the value of the option \dQuote{batchtools.temp.dir} or (if unset) \code{\link[base]{tempdir}}.}
}
\value{
[\code{ExperimentRegistry}].
}
\description{
\code{makeExperimentRegistry} constructs a special \code{\link{Registry}} which
is suitable for the definition of large scale computer experiments.

Each experiments consists of a \code{\link{Problem}} and an \code{\link{Algorithm}}.
These can be parametrized with \code{\link{addExperiments}} to actually define computational
jobs.
}
\examples{
reg = makeTempExperimentRegistry(make.default = FALSE)
addProblem(reg = reg, "p1",
  fun = function(job, data, n, mean, sd, ...) rnorm(n, mean = mean, sd = sd))
addAlgorithm(reg = reg, "a1", fun = function(job, data, instance, ...) mean(instance))
addExperiments(reg = reg, list(p1 = CJ(n = 100, mean = -3:3, sd = 1:5)), list(a1 = data.table()))
submitJobs(reg = reg)
waitForJobs(reg = reg)

# Reduce the results
reduceResults(reg = reg, fun = function(aggr, res, ...) c(aggr, res))

# Join info table with results
ids = findDone(reg = reg)
tab = getJobPars(reg = reg, ids = ids)
res = reduceResultsDataTable(reg = reg, ids = ids)
tab[res]
}

