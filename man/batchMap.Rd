% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batchMap.R
\name{batchMap}
\alias{batchMap}
\title{Map Operation for Batch Systems}
\usage{
batchMap(fun, ..., args = list(), more.args = list(),
  reg = getDefaultRegistry())
}
\arguments{
\item{fun}{[\code{function}]\cr
Function to map over \code{...}.}

\item{...}{[any]\cr
Arguments to vectorize over (list or vector).
Shorter vectors will be recycled (possibly with a warning any length is not a multiple of the maximum length).
Mutually exclusive with \code{args}.}

\item{args}{[\code{list} | \code{data.frame}]\cr
Arguments to vectorize over as (named) list or data frame.
Shorter vectors will be recycled (possibly with a warning any length is not a multiple of the maximum length).
Mutually exclusive with \code{...}.}

\item{more.args}{[\code{list}]\cr
A list of other arguments passed to \code{fun}.
Default is an empty list.}

\item{reg}{[\code{\link{Registry}}]\cr
Registry. If not explicitly passed, uses the last created registry.}
}
\value{
[\code{\link{data.table}}]. Generated job ids are stored in the column \dQuote{job.id}.
  See \code{\link{JoinTables}} for examples on working with job tables.
}
\description{
A parallel \code{\link[base]{Map}} for batch systems.
Note that this function only defines the jobs.
The actual computation is started with \code{\link{submitJobs}} and results
can be collected with \code{\link{reduceResultsList}}, \code{\link{reduceResults}} or
\code{\link{loadResult}}.
For a synchronous \code{\link[base]{Map}}-like execution see \code{\link{btmapply}}.
}
\examples{
# example using "..." and more.args
reg = makeRegistry(file.dir = NA, make.default = FALSE)
f = function(x, y) x^2 + y
ids = batchMap(f, x = 1:10, more.args = list(y = 100), reg = reg)
getJobPars(reg = reg)
testJob(6, reg = reg) # 100 + 6^2 = 136

# vector recycling
reg = makeRegistry(file.dir = NA, make.default = FALSE)
f = function(...) list(...)
ids = batchMap(f, x = 1:3, y = 1:6, reg = reg)
getJobPars(reg = reg)

# example for an expand.grid()-like operation on parameters
reg = makeRegistry(file.dir = NA, make.default = FALSE)
ids = batchMap(paste, args = CJ(x = letters[1:3], y = 1:3), more.args = list(sep = ""), reg = reg)
getJobPars(reg = reg)
testJob(6, reg = reg)
}

