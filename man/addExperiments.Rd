% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addExperiments.R
\name{addExperiments}
\alias{addExperiments}
\title{Add Experiments to the Registry}
\usage{
addExperiments(prob.designs, algo.designs, repls = 1L,
  reg = getDefaultRegistry())
}
\arguments{
\item{prob.designs}{[named list of \code{\link[data.table]{data.table}} or \code{\link[base]{data.frame}}]\cr
Named list of data frames. The name must match the problem name while the column names correspond to parameters
of the problem.}

\item{algo.designs}{[named list of \code{\link[data.table]{data.table}} or \code{\link[base]{data.frame}}]\cr
Named list of data frames. The name must match the algorithm name while the column names correspond to parameters
of the algorithm.}

\item{repls}{[\code{integer(1)}]\cr
Number of replications for each distinct experiment.}

\item{reg}{[\code{\link{ExperimentRegistry}}]\cr
Registry. If not explicitly passed, uses the last created registry.}
}
\value{
[\code{data.table}]. Generated job ids are stored in the column \dQuote{job.id}.
}
\description{
Adds experiments for running algorithms on problems to the registry and thereby defines batch jobs.
Each element in the Cartesian product of problem designs and algorithm designs defines one computational job.
}
\examples{
reg = makeExperimentRegistry(file.dir = NA, make.default = FALSE)
addProblem(reg = reg, "p1",
  fun = function(job, data, n, mean, sd, ...) rnorm(n, mean = mean, sd = sd))
addAlgorithm(reg = reg, "a1", fun = function(job, data, instance, ...) mean(instance))
prob.designs = list(p1 = expand.grid(n = 100, mean = -3:3, sd = 1:5))
algo.designs = list(a1 = data.table())
addExperiments(reg = reg, prob.designs, algo.designs)
}

